@model List<PriceComparisonMVC.Models.Compare.ProductComparisonViewModel>

@{
    ViewData["Title"] = " - Порівняння товарів";
}


@{
    // Обчислюємо кількість товарів
    int productCount = Model?.Count ?? 0;
    // Обчислюємо URL лише, якщо товарів рівно 2
    string smartComparisonUrl = "";
    if (productCount == 2)
    {
        smartComparisonUrl = Url.Action("SmartComparison", "Compare", new { productIdA = Model[0].Id, productIdB = Model[1].Id });
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/comparison-page.css" />
    <link rel="stylesheet" href="~/css/pages/breadcrum.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <!-- Додаємо стилі для модального вікна завантаження та підказок -->
    <style>
        .text-primary-custom {
            color: #1F4E92;
        }

        .text-success-custom {
            color: #0B8E00;
        }

        .loading-container {
            margin: 40px 0;
        }

        .loading-tips {
            background-color: rgba(31, 78, 146, 0.05);
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
        }

        .feature-item {
            font-size: 18px;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
        }

        .check-icon {
            color: #0B8E00;
            margin-right: 10px;
            font-weight: bold;
        }

        .main-description {
            font-size: 20px;
            margin-bottom: 30px;
        }

        #loadingModal .modal-dialog {
            max-width: 700px;
        }

        #loadingModal video {
            max-width: 100%;
            height: auto;
        }

        /* Забороняємо закриття модального вікна при кліку поза ним */
        #loadingModal {
            backdrop-filter: blur(5px);
        }

            #loadingModal .modal-dialog {
                pointer-events: auto;
            }

        /* Стилі для підказок */
        .tooltip {
            font-size: 14px;
        }

            .tooltip .tooltip-inner {
                background-color: #1F4E92;
                padding: 8px 12px;
                max-width: 250px;
            }

            .tooltip .tooltip-arrow::before {
                border-top-color: #1F4E92;
            }
    </style>
}

@section Scripts {
    <script src="~/js/comparasion-page.js"></script>
    <script>
        // Ініціалізація Bootstrap tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
    <script>
        // Змінна для контролю стану порівняння
        let comparisonActive = false;
        let abortController = null;
        let statusCheckTimeout = null;
        let loadingModal = null;

        // Цю частину коду залишаємо вбудованою, оскільки вона використовує серверні змінні Razor
        function smartComparison() {
            var productCount = @productCount;

            // Перевірка на кількість товарів
            if (productCount !== 2) {
                alert("Для розумного порівняння потрібно рівно 2 продукти. Поточна кількість: " + productCount);
                return;
            }

            // Отримуємо categoryId для обох продуктів
            var categoryIdA = @(Model.Count > 0 ? Model[0].CategoryId : 0);
            var categoryIdB = @(Model.Count > 1 ? Model[1].CategoryId : 0);

            // Перевірка на однакові категорії
            if (categoryIdA !== categoryIdB) {
                alert("Для розумного порівняння потрібні товари з однакової категорії.");
                return;
            }

            // Показуємо модальне вікно для порівняння
            showSmartComparisonLoading('@(Model.Count > 0 ? Model[0].Id : 0)', '@(Model.Count > 1 ? Model[1].Id : 0)');
        }

        // Функція для відображення модального вікна завантаження
        function showSmartComparisonLoading(productIdA, productIdB) {
            // Перевіряємо, що ID товарів не нульові
            if (productIdA == 0 || productIdB == 0) {
                alert("Помилка: ID товарів недійсні");
                return;
            }

            // Створюємо новий AbortController для можливості скасування запиту
            abortController = new AbortController();
            comparisonActive = true;

            // Показуємо модальне вікно
            loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'), {
                backdrop: 'static',  // Заборона закриття при кліку поза вікном
                keyboard: false      // Заборона закриття клавішею Esc
            });
            loadingModal.show();

            // Обробники подій для кнопок закриття
            document.getElementById('closeLoadingModal').addEventListener('click', cancelComparison);
            document.getElementById('cancelComparisonBtn').addEventListener('click', cancelComparison);

            // Запускаємо запит на отримання даних порівняння
            fetch(`/Compare/SmartComparisonData?productIdA=${productIdA}&productIdB=${productIdB}`, {
                signal: abortController.signal
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Помилка при отриманні даних порівняння');
                    }
                    // Починаємо періодичну перевірку статусу
                    checkComparisonStatus(productIdA, productIdB);
                })
                .catch(error => {
                    if (error.name === 'AbortError') {
                        console.log('Запит був скасований');
                    } else {
                        console.error('Помилка:', error);
                        // Навіть при помилці, починаємо перевіряти статус, якщо порівняння все ще активне
                        if (comparisonActive) {
                            checkComparisonStatus(productIdA, productIdB);
                        }
                    }
                });
        }

        // Функція для періодичної перевірки завершення порівняння
        function checkComparisonStatus(productIdA, productIdB) {
            if (!comparisonActive) {
                return; // Не продовжуємо перевірку, якщо порівняння скасовано
            }

            fetch('/Compare/CheckComparisonStatus', {
                signal: abortController.signal
            })
                .then(response => response.json())
                .then(data => {
                    if (data.isComplete) {
                        // Якщо порівняння завершено, перенаправляємо на сторінку результатів
                        comparisonActive = false;
                        window.location.href = `/Compare/SmartComparisonResult?productIdA=${productIdA}&productIdB=${productIdB}`;
                    } else if (comparisonActive) {
                        // Якщо порівняння ще не завершено і не скасовано, перевіряємо знову через 1 секунду
                        statusCheckTimeout = setTimeout(() => checkComparisonStatus(productIdA, productIdB), 1000);
                    }
                })
                .catch(error => {
                    if (error.name === 'AbortError') {
                        console.log('Запит статусу був скасований');
                    } else {
                        console.error('Помилка при перевірці статусу:', error);
                        // При помилці чекаємо 1 секунду перед повторною спробою, якщо порівняння активне
                        if (comparisonActive) {
                            statusCheckTimeout = setTimeout(() => checkComparisonStatus(productIdA, productIdB), 1000);
                        }
                    }
                });
        }

        // Функція для скасування порівняння
        function cancelComparison() {
            if (comparisonActive) {
                comparisonActive = false;

                // Скасовуємо всі активні запити
                if (abortController) {
                    abortController.abort();
                }

                // Скасовуємо таймаут перевірки статусу
                if (statusCheckTimeout) {
                    clearTimeout(statusCheckTimeout);
                }

                // Закриваємо модальне вікно
                if (loadingModal) {
                    loadingModal.hide();
                }

                // Додатковий запит на сервер для скасування обробки, якщо потрібно
                fetch('/Compare/CancelComparison', {
                    method: 'POST'
                }).catch(error => {
                    console.error('Помилка при скасуванні порівняння на сервері:', error);
                });

                console.log('Порівняння скасовано');
            }
        }
    </script>
}

<partial name="_Header" />

<partial name="_CategoriesBlock" model="ViewBag.Categories" />

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Головна</a></li>
        <li class="breadcrumb-item active" aria-current="page">Порівняння товарів</li>
    </ol>
</nav>

<div class="container-xxl mt-4">
    <h1 class="text-center mb-4">Порівняння товарів</h1>

    @if (Model == null || Model.Count == 0)
    {
        <div class="mm-empty-comparison-message text-center py-5">
            <h3>Немає товарів для порівняння</h3>
            <p class="text-muted">Додайте товари до порівняння, щоб побачити їх характеристики поруч</p>
            <a href="@Url.Action("Index", "Home")" class="btn btn-primary mt-3">Перейти на головну</a>
        </div>
    }
    else
    {
        <div class="mm-comparison-container">
            <div class="mm-products-row">
                <!-- Перший стовпець - "Додати товар" -->

                <div class="mm-add-product-column">
                    <div class="mm-add-product-box d-flex flex-column align-items-center justify-content-center h-100">
                        <div class="mm-product-compare-title">Додати товар до порівняння</div>

                        <!-- Використовуємо Url.Action для формування посилання на нову дію -->
                        <a href="@Url.Action("CategoryProducts", "Compare", new { id = Model[0].Id})" class="mm-add-product-btn">
                            <i class="fas fa-plus"></i>
                        </a>
                    </div>
                </div>


                <!-- Стовпці з товарами -->
                @foreach (var product in Model)
                {
                    <div class="mm-product-column">
                        <div class="mm-product-compare-box">
                            <div class="mm-product-image-container">
                                <img src="@product.ImageUrl" alt="@product.Name" class="mm-product-image"
                                     onerror="this.src='@Url.Content("~/images/placeholder.png")'; this.onerror='';">
                                <a href="@Url.Action("RemoveFromComparison", "Compare", new { id = product.Id })"
                                   class="mm-favorites-btn" title="Видалити з порівняння">
                                    <i class="fas fa-times"></i>
                                </a>
                            </div>
                            <h3 class="mm-product-title">@product.Name</h3>

                            <div class="mm-product-price">
                                @if (product.HasOffers)
                                {
                                    <span>від @product.MinPrice.ToString("N0") до @product.MaxPrice.ToString("N0") грн</span>
                                }
                                else
                                {
                                    <span class="text-muted">Немає пропозицій</span>
                                }
                            </div>


                            <div class="mm-product-offers">
                                @if (product.HasOffers)
                                {
                                    <span>Пропозицій <span class="mm-offer-count">@product.OfferCount</span></span>
                                }
                                else
                                {
                                    <span>Товар тимчасово недоступний для покупки</span>
                                }
                            </div>

                            <div class="mm-product-brand">
                                <span>@product.Brand</span>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Панель сортування і фільтрації -->
            <div class="mm-comparison-controls d-flex justify-content-between align-items-center">
                <div class="sort-options">
                    <button class="btn btn-outline-primary me-2">Сортування за ціною <i class="fas fa-sort"></i></button>

                    @if (Model.Count == 2)
                    {
                        <button id="smart-comparison-btn" class="btn btn-outline-success" onclick="smartComparison()">
                            Розумне порівняння <i class="fas fa-robot"></i>
                        </button>
                    }
                    else
                    {
                        <div class="d-inline-block" data-bs-toggle="tooltip" data-bs-placement="top" title="Для розумного порівняння потрібно рівно 2 товари">
                            <button id="smart-comparison-btn" class="btn btn-outline-success" disabled>
                                Розумне порівняння <i class="fas fa-robot"></i>
                            </button>
                        </div>
                    }
                </div>

                <div class="view-options">
                    <a href="@Url.Action("ClearComparison", "Compare")" class="btn btn-outline-danger">
                        <i class="fas fa-trash-alt"></i> Очистити порівняння
                    </a>
                </div>
            </div>

            <!-- Фільтр характеристик -->
            <div class="mm-filter-tabs">
                <div class="d-flex">
                    <div class="tab-buttons btn-group">
                        <button class="mm-tab-button btn btn-outline-success active" id="show-all">Всі характеристики</button>
                        <button class="mm-tab-button btn btn-outline-success" id="show-different">Відмінні</button>
                    </div>
                </div>
            </div>

            <!-- Характеристики товарів -->
            <div class="mm-specs-wrapper">
                <!-- Отримуємо унікальні групи характеристик -->
                @{
                    var allSpecs = new HashSet<string>();
                    foreach (var product in Model)
                    {
                        foreach (var spec in product.Specifications.Keys)
                        {
                            allSpecs.Add(spec);
                        }
                    }

                    // Примірні групи для категоризації
                    var groups = new Dictionary<string, List<string>>
            {
            { "Дисплей", new List<string> { "Діагональ екрана", "Тип матриці", "Покриття екрана", "Роздільна здатність", "Частота зміни кадрів" } },
            { "Процесор", new List<string> { "Серія процесора", "Модель процесора", "Кількість ядер", "Частота процесора" } },
            { "Пам'ять", new List<string> { "Об'єм оперативної пам'яті", "Тип оперативної пам'яті", "Об'єм накопичувача", "Тип накопичувача" } }
            };
                }

                @foreach (var group in groups)
                {
                    var relevantSpecs = allSpecs.Where(spec => group.Value.Any(g => spec.Contains(g))).ToList();
                    if (relevantSpecs.Any())
                    {
                        <div class="mm-specs-section">
                            <div class="mm-specs-header">@group.Key</div>
                            <div class="mm-specs-table-container">
                                <table class="mm-specs-table">
                                    @foreach (var spec in relevantSpecs)
                                    {
                                        <tr>
                                            <td class="mm-feature-name">@spec</td>
                                            @foreach (var product in Model)
                                            {
                                                <td class="mm-feature-value">
                                                    @(product.Specifications.ContainsKey(spec)
                                                        ? Html.Raw(
                                                        (product.Specifications[spec] ?? string.Empty)
                                                        .Replace("\\r\\n", "<br/>")
                                                        .Replace("\\n", "<br/>")
                                                        .Replace("\r\n", "<br/>")
                                                        .Replace("\n", "<br/>"))
                                                        : "-")
                                                </td>
                                            }
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    }
                }

                <!-- Інші характеристики, які не потрапили до груп -->
                @{
                    var groupedSpecs = groups.Values.SelectMany(g => g).ToList();
                    var otherSpecs = allSpecs.Where(spec => !groupedSpecs.Any(g => spec.Contains(g))).ToList();
                }

                @if (otherSpecs.Any())
                {
                    <div class="mm-specs-section">
                        <div class="mm-specs-header">Інші характеристики</div>
                        <div class="mm-specs-table-container">
                            <table class="mm-specs-table">
                                @foreach (var spec in otherSpecs)
                                {
                                    <tr>
                                        <td class="mm-feature-name">@spec</td>
                                        @foreach (var product in Model)
                                        {
                                            <td class="mm-feature-value">
                                                @(product.Specifications.ContainsKey(spec)
                                                    ? Html.Raw(
                                                    (product.Specifications[spec] ?? string.Empty)
                                                    .Replace("\\r\\n", "<br/>")
                                                    .Replace("\\n", "<br/>")
                                                    .Replace("\r\n", "<br/>")
                                                    .Replace("\n", "<br/>"))
                                                    : "-")
                                            </td>
                                        }
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<!-- Модальне вікно для завантаження розумного порівняння -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loadingModalLabel">Розумне порівняння</h5>
                <button type="button" class="btn-close" id="closeLoadingModal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="text-center py-5">
                    <h2 class="mb-4">Виконується розумне порівняння товарів</h2>
                    <p class="text-muted mb-4 main-description">Наш <span class="text-primary-custom">ШІ</span> аналізує та порівнює характеристики товарів. Це може зайняти до <span class="text-success-custom">20 секунд</span>.</p>

                    <div class="loading-container my-5">
                        <video autoplay loop muted playsinline>
                            <source src="@Url.Content("~/images/MarketMap-animation.mp4")" type="video/mp4">
                            <!-- Fallback для старих браузерів -->
                            <img src="@Url.Content("~/images/2GU.gif")" alt="Завантаження" class="img-fluid">
                        </video>
                    </div>

                    <div class="loading-tips mt-4">
                        <p class="text-primary-custom mb-4" style="font-size: 22px;">Під час обробки виконується:</p>
                        <div class="list-unstyled text-muted">
                            <div class="feature-item"><span class="check-icon">✓</span> Аналіз усіх технічних характеристик</div>
                            <div class="feature-item"><span class="check-icon">✓</span> Виявлення ключових відмінностей</div>
                            <div class="feature-item"><span class="check-icon">✓</span> Підготовка порівняльної таблиці</div>
                            <div class="feature-item"><span class="check-icon">✓</span> Формування рекомендацій</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="cancelComparisonBtn">Скасувати порівняння</button>
            </div>
        </div>
    </div>
</div>

<partial name="_Footer" />